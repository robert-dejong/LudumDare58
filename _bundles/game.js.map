{"version":3,"file":"game.js","mappings":"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","sources":["webpack://MyLib/webpack/universalModuleDefinition","webpack://MyLib/./libs/Core/Action/ActionExecutor.ts","webpack://MyLib/./libs/Core/Action/Unit.ts","webpack://MyLib/./libs/Core/Input/Key.ts","webpack://MyLib/./libs/Core/Input/KeyHandler.ts","webpack://MyLib/./libs/Core/Input/Mouse.ts","webpack://MyLib/./libs/Core/Input/MouseHandler.ts","webpack://MyLib/./libs/Core/Screen/RenderRectangleOptions.ts","webpack://MyLib/./libs/Core/Screen/RenderTextOptions.ts","webpack://MyLib/./libs/Core/Screen/Screen.ts","webpack://MyLib/./libs/Core/Screen/Sprite.ts","webpack://MyLib/./libs/Core/Settings/Settings.ts","webpack://MyLib/./libs/Core/Task/Task.ts","webpack://MyLib/./libs/Core/Task/TaskManager.ts","webpack://MyLib/./libs/Core/UI/UI.ts","webpack://MyLib/./libs/Core/UI/UIManager.ts","webpack://MyLib/./libs/Core/Util/Direction.ts","webpack://MyLib/./libs/Core/Util/Maths.ts","webpack://MyLib/./src/Actions/Entity/DamageRam.ts","webpack://MyLib/./src/Actions/Entity/IncreasePoints.ts","webpack://MyLib/./src/Actions/Entity/IncreaseScoreAction.ts","webpack://MyLib/./src/Actions/Entity/MoveMobEntity.ts","webpack://MyLib/./src/Actions/Entity/WorkerFireProjectile.ts","webpack://MyLib/./src/Actions/Level/ClearLevel.ts","webpack://MyLib/./src/Actions/Level/GenerateLevel.ts","webpack://MyLib/./src/Actions/Level/RenderLevel.ts","webpack://MyLib/./src/Actions/MouseClickAction.ts","webpack://MyLib/./src/Actions/MouseDragAction.ts","webpack://MyLib/./src/Actions/MouseMovedAction.ts","webpack://MyLib/./src/Actions/Player/UseBroomAction.ts","webpack://MyLib/./src/Actions/Upgrades/BuyPlaceableUpgrade.ts","webpack://MyLib/./src/Config.ts","webpack://MyLib/./src/Entity/CpuThread/CpuThreadMobEntity.ts","webpack://MyLib/./src/Entity/CpuThread/CpuThreadProjectileEntity.ts","webpack://MyLib/./src/Entity/Entity.ts","webpack://MyLib/./src/Entity/ItemEntity.ts","webpack://MyLib/./src/Entity/Items/CpuOverclockItem.ts","webpack://MyLib/./src/Entity/Items/RamRepairItem.ts","webpack://MyLib/./src/Entity/Items/RestartItem.ts","webpack://MyLib/./src/Entity/MobEntity.ts","webpack://MyLib/./src/Entity/Mobs/ArrayMobEntity.ts","webpack://MyLib/./src/Entity/Mobs/ForLoopMobEntity.ts","webpack://MyLib/./src/Entity/Mobs/HashMapMobEntity.ts","webpack://MyLib/./src/Entity/Mobs/HelloWorldMobEntity.ts","webpack://MyLib/./src/Entity/Mobs/NodeModulesMobEntity.ts","webpack://MyLib/./src/Entity/Mobs/PrintMobEntity.ts","webpack://MyLib/./src/Entity/Mobs/TodoCommentMobEntity.ts","webpack://MyLib/./src/Entity/NpuCore/NpuCoreMobEntity.ts","webpack://MyLib/./src/Entity/NpuCore/NpuCoreProjectileEntity.ts","webpack://MyLib/./src/Entity/Player/PlayerActions.ts","webpack://MyLib/./src/Entity/Player/PlayerStats.ts","webpack://MyLib/./src/Entity/ProjectileEntity.ts","webpack://MyLib/./src/Entity/VariableMobEntity.ts","webpack://MyLib/./src/Entity/WorkerEntity.ts","webpack://MyLib/./src/Keybinds.ts","webpack://MyLib/./src/Level/Level.ts","webpack://MyLib/./src/Main.ts","webpack://MyLib/./src/Sprites.ts","webpack://MyLib/./src/Tasks/EnemyWaveTask.ts","webpack://MyLib/./src/Tasks/ItemSpawnTask.ts","webpack://MyLib/./src/UI/BottomUi.ts","webpack://MyLib/./src/UITypes.ts","webpack://MyLib/./src/Upgrades/Upgrade.ts","webpack://MyLib/./src/Upgrades/UpgradeType.ts","webpack://MyLib/./src/Upgrades/Upgrades.ts","webpack://MyLib/webpack/bootstrap","webpack://MyLib/webpack/runtime/define property getters","webpack://MyLib/webpack/runtime/hasOwnProperty shorthand","webpack://MyLib/webpack/runtime/make namespace object","webpack://MyLib/webpack/before-startup","webpack://MyLib/webpack/startup","webpack://MyLib/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MyLib\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MyLib\"] = factory();\n\telse\n\t\troot[\"MyLib\"] = factory();\n})(self, () => {\nreturn ","import { IAction } from \"./IAction\";\nimport { IActionExecutor } from \"./IActionExecutor\";\nimport { IActionHandler } from \"./IActionHandler\";\n\nclass ActionExecutor implements IActionExecutor {\n    private readonly handlers: Map<string, () => IActionHandler<IAction, unknown>>;\n\n    constructor() {\n        this.handlers = new Map<string, () => IActionHandler<IAction, unknown>>;\n    }\n\n    public register<T extends IActionHandler<IAction, unknown>>(action: string, handler: () => T) {\n        this.handlers.set(action, handler);\n    }\n\n    public execute<T>(action: IAction): T {\n        if (!this.handlers.has(action.constructor.name)) {\n            throw new Error(`Could not find handler for action '${action.constructor.name}'`);\n        }\n\n        const handler = this.handlers.get(action.constructor.name);\n        return handler().handle(action) as T;\n    }\n}\n\nexport const createActionExecutor = () => new ActionExecutor();","export type Unit = { readonly _unit: unique symbol };\n\nexport const Unit = { value: {} as Unit };\n","export class Key {\n    public readonly keys: string[];\n    private pressed = false;\n\n    constructor(keys: string | string[]) {\n        this.keys = Array.isArray(keys) ? keys : [keys];\n    }\n\n    public get isPressed() {\n        return this.pressed;\n    }\n    \n    public toggle(pressed: boolean): void {\n        this.pressed = pressed;\n    }\n\n    public release(): void {\n        this.pressed = false;\n    }\n}","import { Key } from \"./Key\";\n\nexport class KeyHandler {\n    private static binds = new Map<string, Key>();\n\n    private constructor() { }\n\n    public static init(binds: { [key: string]: Key }): void {\n        for (const [, value] of Object.entries(binds)) {\n            value.keys.forEach(key => KeyHandler.binds.set(key, value));\n        }\n\n        KeyHandler.keyEvent('keydown');\n        KeyHandler.keyEvent('keyup');\n    }\n\n    private static keyEvent(type: 'keydown' | 'keyup'): void {\n        const pressed = type === 'keydown';\n\n        window.addEventListener(type, (e: KeyboardEvent) => {\n            // e.preventDefault();\n            // console.log(\"Pressing key: \" + e.key);\n\n            if (!KeyHandler.binds.has(e.key)) return;\n\n            const bind = KeyHandler.binds.get(e.key);\n\n            bind.toggle(pressed);\n        });\n    }\n}","export class Mouse {\n    public static x: number;\n    public static y: number;\n}","import { Mouse } from \"./Mouse\";\n\nexport class MouseHandler {\n    private constructor() { }\n\n    private static isPressed: boolean;\n\n    public static bind(type: 'mousedrag' | 'mousemove' | 'click', action: (x: number, y: number) => void) {\n        if (type === 'mousedrag') {\n            this.bindMouseDrag(action);\n            return;\n        }\n        \n        const event = (e: MouseEvent) => {\n            Mouse.x = e.offsetX;\n            Mouse.y = e.offsetY;\n            if (type === 'mousemove' && this.isPressed) return;\n            action(e.offsetX, e.offsetY);\n        };\n\n        document.getElementById('canvas').addEventListener(type, event);\n    }\n\n    private static bindMouseDrag(action: (x: number, y: number) => void) {\n        document.getElementById('canvas').addEventListener('mousedown', () => {\n            this.isPressed = true;\n        });\n\n        document.getElementById('canvas').addEventListener('mouseup', () => {\n            this.isPressed = false;\n        });\n\n        document.getElementById('canvas').addEventListener('mousemove', (e: MouseEvent) => {\n            if (this.isPressed) {\n                action(e.offsetX, e.offsetY);\n            }\n        });\n    }\n}","export class RenderRectangleOptions {\n    public readonly color?: string = '#ffffff';\n    public readonly alpha?: number = 1.0;\n    public readonly filled?: boolean = true;\n}","export class RenderTextOptions {\n    public readonly fontSize?: number = 6;\n    public readonly fontColor?: string = '#ffffff';\n    public readonly fontWeight?: number = 400;\n    public readonly maxWidth?: number = undefined;\n    public readonly width?: number = undefined;\n    public readonly textAlign?: 'left' | 'center' | 'right' = 'left';\n}","import { IScreen } from \"./IScreen\";\nimport { RenderRectangleOptions } from \"./RenderRectangleOptions\";\nimport { RenderTextOptions } from \"./RenderTextOptions\";\nimport { Sprite } from \"./Sprite\";\n\nclass Screen implements IScreen {\n    private width: number;\n    private height: number;\n\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D;\n    private scale: number;\n\n    constructor(scale: number) {\n        this.canvas = document.getElementById('canvas') as HTMLCanvasElement;\n        this.context = this.canvas.getContext('2d');\n        this.scale = scale;\n    }\n\n    public getSize = () => ({ width: this.width, height: this.height });\n\n    public render(sprite: Sprite, x: number, y: number): void {\n        if (!sprite.loaded) return;\n        if (!this.shouldRender(x, y, sprite.width, sprite.height)) return; // Still neccessary for entities\n\n        this.context.drawImage(sprite.image, x, y, sprite.width, sprite.height);\n    }\n\n    public setSize(width: number, height: number): void {\n        this.canvas.width = width;\n        this.canvas.height = height;\n\n        this.context.imageSmoothingEnabled = false;\n        this.context.scale(this.scale, this.scale);\n\n        this.width = this.canvas.width / this.scale;\n        this.height = this.canvas.height / this.scale;\n    }\n\n    public renderText(text: string, x: number, y: number, options: RenderTextOptions = new RenderTextOptions()): void {\n        options = {...new RenderTextOptions(), ...options};\n        this.context.fillStyle = options.fontColor;\n        this.context.font = `${options.fontWeight} ${options.fontSize}px Arial`;\n        \n        if (options.width && options.textAlign === 'center') {\n            const textWidth = this.context.measureText(text).width;\n            this.context.fillText(text, x + (options.width - textWidth) / 2, y);\n            return;\n        }\n        \n        if (options.width && options.textAlign === 'right') {\n            this.context.textAlign = 'right';\n            this.context.fillText(text, x + options.width, y);\n            this.context.textAlign = 'left';\n            return;\n        }\n\n        if (!options.maxWidth) {\n            this.context.fillText(text, x, y);\n            return;\n        }\n        \n        const words = text.split(' ');\n        let currentLine = '';\n        let lineHeight = 0;\n\n        words.forEach(word => {\n            const line = `${currentLine}${currentLine.length !== 0 ? ' ' : ''}${word}`;\n\n            if (this.context.measureText(line).width > options.maxWidth) {\n                this.context.fillText(currentLine, x, y + lineHeight);\n                currentLine = word;\n                lineHeight += (options.fontSize * 1.2);\n                return;\n            }\n\n            currentLine = line;\n        });\n\n        if (currentLine.length > 0) {\n            this.context.fillText(currentLine, x, y + lineHeight);\n        }\n    }\n\n    public renderRectangle(x: number, y: number, width: number, height: number, options: RenderRectangleOptions = new RenderRectangleOptions()) {\n        options = {...new RenderRectangleOptions(), ...options};\n        this.context.fillStyle = options.color;\n        this.context.strokeStyle = options.color;\n        this.context.globalAlpha = options.alpha;\n        \n        if (options.filled) {\n            this.context.fillRect(x, y, width, height);\n        } else {\n            this.context.beginPath();\n            this.context.rect(x, y, width, height);\n            this.context.stroke();\n        }\n\n        this.context.globalAlpha = 1.0;\n    }\n\n    public renderLine(x: number, y: number, width: number, height: number, brushSize: number, color: string) {\n        this.context.strokeStyle = color;\n        this.context.lineWidth = brushSize;\n        this.context.beginPath();\n        this.context.moveTo(x, y);\n        this.context.lineTo(width, height);\n        this.context.stroke();\n    }\n\n    public setCursorVisibility(visible: boolean) {\n        this.canvas.style.cursor = visible ? 'auto' : 'none';\n    }\n\n    private shouldRender(absoluteX: number, absoluteY: number, renderWidth: number, renderHeight: number): boolean {\n        if(absoluteX > this.width) return false;\n        if(absoluteY > this.height) return false;\n        if(absoluteX + renderWidth < 0) return false;\n        if(absoluteY + renderHeight < 0) return false;\n        \n        return true;\n    }\n}\n\nexport const createScreen2D = (scale: number) => new Screen(scale);","export class Sprite {\n    public loaded: boolean;\n    public width: number;\n    public height: number;\n    public image: HTMLImageElement;\n\n    constructor(path: string) {\n        this.image = new Image();\n        this.image.src = path;\n\n        this.image.onload = () => {\n            this.width = this.image.width;\n            this.height = this.image.height;\n            this.loaded = true;\n        }\n    }\n}","type Difficulty = 'normal' | 'easy';\ntype Menu = 'mainmenu' | 'settings' | 'game';\n\nexport const settings = {\n    isMuted: (): boolean => window['isMuted'] ?? false,\n    difficulty: (): Difficulty => window['difficulty'] ?? 'normal',\n    menu: (): Menu => window['gamemenu'] ?? 'mainmenu',\n    \n    setMuted: (isMuted: boolean): void => {\n        window['isMuted'] = isMuted;\n    },\n\n    setDifficulty: (difficulty: Difficulty): void => {\n        window['difficulty'] = difficulty;\n    },\n\n    setMenu: (menu: Menu): void => {\n        window['gamemenu'] = menu;\n    }\n}","export abstract class Task {\n\tpublic readonly name?: string;\n    public readonly loop: boolean;\n    \n    private readonly initialTicks: number;\n    \n\tprivate ticks: number;\n\n\tpublic abstract execute(): void;\n\n\tconstructor(ticks: number, loop = false, name?: string) {\n        this.initialTicks = ticks;\n\t\tthis.ticks = ticks;\n        this.loop = loop;\n        this.name = name;\n\t}\n\n\tpublic onCreate(): void {\n\n\t}\n\n    public shouldExecute = (): boolean => this.ticks <= 0;\n    public reset = (): void => { this.ticks = this.initialTicks };\n\tpublic tick = (): void => { this.ticks-- };\n}\n","import { ITaskManager } from \"./ITaskManager\";\nimport { Task } from \"./Task\";\n\nclass TaskManager implements ITaskManager {\n\tprivate tasks: Array<Task>;\n\n    constructor() {\n        this.tasks = new Array<Task>();\n    }\n\n\tpublic tick() {\n\t\tthis.tasks.forEach((task) => {\n\t\t\ttask.tick();\n\n\t\t\tif (!task.shouldExecute()) {\n                return;\n            }\n\n\t\t\ttask.execute();\n\t\t\ttask.reset();\n\n\t\t\tif (!task.loop) {\n\t\t\t\tthis.tasks = this.tasks.filter(t => t !== task);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic remove(name: string) {\n\t\tthis.tasks = this.tasks.filter(t => t.name !== name);\n\t}\n\n\tpublic add(task: Task) {\n\t\tthis.tasks.push(task);\n\t\ttask.onCreate();\n\t}\n\n\tpublic reset() {\n\t\tthis.tasks.forEach((task) => task.reset());\n\t}\n\n\tpublic clear() {\n\t\tthis.tasks = new Array<Task>();\n\t}\n}\n\nexport const createTaskManager = () => new TaskManager();","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { IScreen } from \"../Screen/IScreen\";\n\nexport abstract class UI {\n    protected mouseX: number;\n    protected mouseY: number;\n\n    private show: boolean;\n\n    public abstract render(screen: IScreen): void;\n    public abstract tick(): void;\n    public abstract getPosition(): { x: number, y: number, width: number, height: number };\n    \n    public click(x: number, y: number): void { }\n    public hover(x: number, y: number): void { }\n    public drag(x: number, y: number): void { }\n    public resetHover(): void { }\n    public resetDrag(): void { }\n    \n    public reset(): void {\n        this.resetHover();\n        this.resetDrag();\n    }\n\n    public isShow = (): boolean => this.show;\n    public setMousePosition = (x: number, y: number): void => {(this.mouseX = x, this.mouseY = y )};\n\n    public toggle = (): void => {\n        this.show = !this.show;\n\n        if (!this.show) {\n            this.reset();\n        }\n    };\n}","import { IScreen } from \"../Screen/IScreen\";\nimport { Maths } from \"../Util/Maths\";\nimport { IUIManager } from \"./IUIManager\";\nimport { UI } from \"./UI\";\n\nclass UIManager implements IUIManager {\n    private readonly interfaces: Map<string, UI>;\n\n    // !Maths.intersects(this.dragStartX, this.dragStartY, 0, 0, e.offsetX - (dragThreshold / 2), e.offsetY - (dragThreshold / 2), dragThreshold, dragThreshold)\n    constructor() {\n        this.interfaces = new Map<string, UI>();\n    }\n\n    public tick(): void {\n        this.interfaces.forEach(ui => {\n            if (!ui.isShow()) return;\n\n            ui.tick();\n        })\n    }\n\n    public render(screen: IScreen): void {\n        this.interfaces.forEach(ui => {\n            if (!ui.isShow()) return;\n\n            ui.render(screen);\n        })\n    }\n\n    public handleClick(x: number, y: number): void {\n        this.interfaces.forEach(ui => {\n            if (!ui.isShow()) return;\n            \n            const position = ui.getPosition();\n\n            ui.reset();\n            \n            //if (Maths.intersects(x, y, 0, 0, position.x, position.y, position.width, position.height)) {\n                ui.click(x - position.x, y - position.y);\n            //}\n        })\n    }\n\n    public handleHover(x: number, y: number): void {\n        this.interfaces.forEach(ui => {\n            if (!ui.isShow()) return;\n            \n            const position = ui.getPosition();\n\n            ui.setMousePosition(x, y);\n            ui.resetHover();\n\n            if (Maths.intersects(x, y, 0, 0, position.x, position.y, position.width, position.height)) {\n                ui.reset();\n                ui.hover(x - position.x, y - position.y);\n            }\n        })\n    }\n\n    public handleDrag(x: number, y: number): void {\n        this.interfaces.forEach(ui => {\n            if (!ui.isShow()) return;\n            \n            const position = ui.getPosition();\n\n            ui.setMousePosition(x, y);\n            \n            if (Maths.intersects(x, y, 0, 0, position.x, position.y, position.width, position.height)) {\n                ui.resetHover();\n                ui.drag(x - position.x, y - position.y); \n            }\n        })\n    }\n\n    public toggle = (name: string): void => this.interfaces.get(name).toggle();\n    public add = (name: string, ui: UI): void => {( this.interfaces.set(name, ui) )};\n}\n\nexport const createUIManager = () => new UIManager();","export class Direction {\n    \n    public static get(x: number, y: number) {\n        if (y < 0) return Directions.up;\n        if (y > 0) return Directions.down;\n        if (x < 0) return Directions.left;\n        if (x > 0) return Directions.right;\n\n        throw new Error(`Could not get direction for ${x}, ${y}`);\n    }\n}\n\nexport enum Directions {\n    up,\n    down,\n    left,\n    right\n}","export class Maths {\n\n    public static intersects(x1: number, y1: number, width1: number, height1: number, x2: number, y2: number, width2: number, height2: number): boolean {\n        return (x1 + width1 >= x2 && x1 <= x2 + width2) &&\n               (y1 + height1 >= y2 && y1 <= y2 + height2);\n    }\n    \n    public static getDistance(x1: number, y1: number, x2: number, y2: number): number {\n        const dx = x1 - x2;\n        const dy = y1 - y2;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../../libs/Core/Action/Unit\";\nimport { PlayerStats } from \"../../Entity/Player/PlayerStats\";\n\nexport class DamageRamAction implements IAction {\n    constructor(public readonly damage: number) { }\n}\n\nexport class DamageRamActionHandler implements IActionHandler<DamageRamAction> {\n\n    constructor(private readonly playerStats: PlayerStats) { }\n\n    public handle(action: DamageRamAction): Unit {\n        this.playerStats.dealDamage(action.damage);\n\n        return Unit.value;\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../../libs/Core/Action/Unit\";\nimport { PlayerStats } from \"../../Entity/Player/PlayerStats\";\n\nexport class IncreasePointsAction implements IAction {\n    constructor(public readonly points: number) { }\n}\n\nexport class IncreasePointsActionHandler implements IActionHandler<IncreasePointsAction> {\n\n    constructor(private readonly playerStats: PlayerStats) { }\n\n    public handle(action: IncreasePointsAction): Unit {\n        this.playerStats.addPoints(action.points);\n\n        return Unit.value;\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../../libs/Core/Action/Unit\";\nimport { PlayerStats } from \"../../Entity/Player/PlayerStats\";\n\nexport class IncreaseScoreAction implements IAction {\n    constructor(public readonly score: number) { }\n}\n\nexport class IncreaseScoreActionHandler implements IActionHandler<IncreaseScoreAction> {\n\n    constructor(private readonly playerStats: PlayerStats) { }\n\n    public handle(action: IncreaseScoreAction): Unit {\n        this.playerStats.addScore(action.score);\n\n        return Unit.value;\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../../libs/Core/Action/Unit\";\nimport { Direction } from \"../../../libs/Core/Util/Direction\";\nimport { Maths } from \"../../../libs/Core/Util/Maths\";\nimport { MobEntity } from \"../../Entity/MobEntity\";\nimport { ILevel } from \"../../Level/ILevel\";\n\nexport class MoveMobEntityAction implements IAction {\n    constructor(\n        public readonly entity: MobEntity,\n        public readonly moveX: number,\n        public readonly moveY: number) { }\n}\n\nexport class MoveMobEntityActionHandler implements IActionHandler<MoveMobEntityAction> {\n\n    constructor(private readonly level: ILevel) { }\n\n    public handle(action: MoveMobEntityAction): Unit {\n        const entity = action.entity;\n        let { moveX, moveY } = action;\n\n        if (moveX === 0 && moveY === 0) return;\n\n        if (entity.animations) {\n            entity.walkTime++;\n\n            if (entity.animations.isNextAnimation(entity.walkTime)) {\n                entity.animationIndex = entity.animations.nextIndex(entity.direction, entity.animationIndex);\n                entity.walkTime = 0;\n            }\n        }\n\n        const canMoveX = this.canMove(entity, moveX, 0);\n        const canMoveY = this.canMove(entity, 0, moveY);\n        const canMove = this.canMove(entity, moveX, moveY);\n\n        if (!canMoveX && !canMoveY && !canMove) return;\n\n        if (!canMoveX) moveX = 0;\n        if (!canMoveY) moveY = 0;\n\n        if (moveX === 0 && moveY === 0) return;\n\n        entity.x += moveX;\n        entity.y += moveY;\n        entity.direction = Direction.get(moveX, moveY);\n    }\n\n    private canMove(target: MobEntity, moveX: number, moveY: number): boolean {\n        const entities = this.level.getEntities();\n        const newX = target.x + moveX;\n        const newY = target.y + moveY;\n\n        for(const entity of entities) {\n            if (entity === target) continue;\n\n            if (!Maths.intersects(\n                newX, newY, target.getSprite().width, target.getSprite().height, \n                entity.x, entity.y, entity.getSprite().width, entity.getSprite().height)) {\n                continue;\n            }\n            \n            target.onCollide(entity);\n            entity.onCollide(target);\n        }\n\n        return true;\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../../libs/Core/Action/Unit\";\nimport { Maths } from \"../../../libs/Core/Util/Maths\";\nimport { config } from \"../../Config\";\nimport { Entity } from \"../../Entity/Entity\";\nimport { CpuThreadProjectileEntity } from \"../../Entity/CpuThread/CpuThreadProjectileEntity\";\nimport { NpuCoreProjectileEntity } from \"../../Entity/NpuCore/NpuCoreProjectileEntity\";\nimport { VariableMobEntity } from \"../../Entity/VariableMobEntity\";\nimport { PlayerStats } from \"../../Entity/Player/PlayerStats\";\nimport { WorkerEntity } from \"../../Entity/WorkerEntity\";\nimport { ILevel } from \"../../Level/ILevel\";\nimport { UpgradeType } from \"../../Upgrades/UpgradeType\";\n\nexport class WorkerFireProjectileAction implements IAction {\n    constructor(public readonly worker: WorkerEntity) { }\n}\n\nexport class WorkerFireProjectileActionHandler implements IActionHandler<WorkerFireProjectileAction> {\n\n    constructor(\n        private readonly level: ILevel, \n        private readonly playerStats: PlayerStats) { }\n\n    public handle(action: WorkerFireProjectileAction): Unit {\n        const level = this.playerStats.getUpgradeLevel(UpgradeType.CpuOverclock);\n        let attackDelay = action.worker.workerType === 'cpu' ? \n            action.worker.attackDelay - (level * 20) : \n            action.worker.attackDelay;\n\n        if (attackDelay < 10) attackDelay = 10;\n\n        if (action.worker.timeSinceLastAttack < attackDelay) {\n            action.worker.timeSinceLastAttack++;\n            return;\n        }\n\n        const target = this.findNearestEntity(action.worker);\n\n        if (!target) return;\n        \n        const x = action.worker.x + (action.worker.getSprite().width / 2) - 1;\n        const y = action.worker.y + (action.worker.getSprite().height / 2) - 1;\n\n        const xOffset = target.x - action.worker.x;\n        const yOffset = target.y - action.worker.y;\n        const distance = Math.sqrt(xOffset * xOffset + yOffset * yOffset);\n        const directionX = xOffset / distance;\n        const directionY = yOffset / distance;\n\n        if (action.worker.workerType === 'cpu') {\n            const cpuLevel = this.playerStats.getUpgradeLevel(UpgradeType.CpuOverclock);\n            const speedModifier = config.getCpuThreadModifier(cpuLevel);\n            const damageModifier = config.getCpuThreadModifier(cpuLevel);\n            const projectile = new CpuThreadProjectileEntity(x, y, directionX, directionY, speedModifier, damageModifier);\n            this.level.add(projectile);\n        } else if (action.worker.workerType === 'npu') {\n            const projectile = new NpuCoreProjectileEntity(x, y, directionX, directionY);\n            this.level.add(projectile);\n        }\n        \n        action.worker.timeSinceLastAttack = 0;\n    }\n\n    private findNearestEntity(worker: WorkerEntity): VariableMobEntity {\n        const entities = this.level.getEntities().filter(this.isVariableMobEntity);\n     \n        if (entities.length === 0) return undefined;\n\n        let nearest = entities[0];\n        let minDistance = Maths.getDistance(worker.x, worker.y, nearest.x, nearest.y);\n\n        for(let i = 1; i < entities.length; i++) {\n            const entity = entities[i];\n            const distance = Maths.getDistance(worker.x, worker.y, entity.x, entity.y);\n\n            if (distance < minDistance) {\n                nearest = entity;\n                minDistance = distance;\n            }\n        }\n\n        return nearest;\n    }\n\n    private isVariableMobEntity(e: Entity): e is VariableMobEntity {\n        return e.x <= (config.screenWidth / config.renderScale) && e instanceof VariableMobEntity;\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../../libs/Core/Action/Unit\";\nimport { Entity } from \"../../Entity/Entity\";\nimport { VariableMobEntity } from \"../../Entity/VariableMobEntity\";\nimport { ILevel } from \"../../Level/ILevel\";\n\nexport class ClearLevelAction implements IAction {\n    constructor() { }\n}\n\nexport class ClearLevelActionHandler implements IActionHandler<ClearLevelAction> {\n\n    constructor(private readonly level: ILevel) { }\n        \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public handle(action: ClearLevelAction): Unit {\n        const mobEntities = this.level.getEntities().filter(this.isVariableMobEntity);\n\n        for(const entity of mobEntities) {\n            entity.dealDamage(Number.MAX_VALUE);\n        }\n        \n        return Unit.value;\n    }\n\n    private isVariableMobEntity(e: Entity): e is VariableMobEntity {\n        return e instanceof VariableMobEntity;\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionExecutor } from \"../../../libs/Core/Action/IActionExecutor\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { config } from \"../../Config\";\nimport { CpuThreadMobEntity } from \"../../Entity/CpuThread/CpuThreadMobEntity\";\nimport { PrintMobEntity } from \"../../Entity/Mobs/PrintMobEntity\";\nimport { ILevel } from \"../../Level/ILevel\";\nimport { createLevel } from \"../../Level/Level\";\n\nexport class GenerateLevelAction implements IAction {\n    constructor() { }\n}\n\nexport class GenerateLevelActionHandler implements IActionHandler<GenerateLevelAction, ILevel> {\n    \n    constructor(\n        private readonly actionExecutor: IActionExecutor) { }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public handle(action: GenerateLevelAction): ILevel {\n        const level = createLevel(this.actionExecutor);\n\n        const x = (config.screenWidth / config.renderScale) / 2;\n        const y = config.BottomUiBarHeight / 2;\n        const cpuThread = new CpuThreadMobEntity(x + config.leftUiBarWidth - 13, y - 6);\n        level.add(cpuThread);\n\n        const printEntity = new PrintMobEntity();\n        printEntity.teleport(350, 60);\n        level.add(printEntity);\n\n        // level.add(new RamRepairItem(30, 77));\n\n        return level;\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../../libs/Core/Action/Unit\";\nimport { IScreen } from \"../../../libs/Core/Screen/IScreen\";\nimport { config } from \"../../Config\";\nimport { ILevel } from \"../../Level/ILevel\";\nimport { Sprites } from \"../../Sprites\";\n\nexport class RenderLevelAction implements IAction { }\n\nexport class RenderLevelActionHandler implements IActionHandler<RenderLevelAction> {\n    \n    constructor(\n        private readonly level: ILevel,\n        private readonly screen: IScreen) { }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public handle(_action: RenderLevelAction): Unit {\n        this.screen.render(Sprites.background, 0, 0);\n        //const { width, height } = this.screen.getSize();\n        //this.screen.renderRectangle(0, 0, width, height, { color: '#162d19' });\n        //this.screen.renderLine(0, 30, 30, 0, 1, '#224b15');\n        //this.screen.renderLine(0, 35, 35, 0, 1, '#224b15');\n        this.renderLeftUiBar();\n        this.renderEntities();\n\n        return Unit.value;\n    }\n\n    private renderLeftUiBar(): void {\n        const { height } = this.screen.getSize();\n        const imageHeight = Sprites.ram.height;\n        const topMargin = 15;\n        const bottomMargin = 15;\n        const leftMargin = 2;\n        const imageCount = 4;\n\n        const usableHeight = config.BottomUiBarHeight - topMargin - bottomMargin - imageHeight;\n        const spacing = usableHeight / (imageCount - 1);\n\n        const lineMarginX = Sprites.ram.width + 2 + leftMargin;\n        const lineWidth = 4;\n\n        this.screen.renderRectangle(0, 0, config.leftUiBarWidth, height, { color: '#2a5644' });\n\n        for (let i = 0; i < imageCount; i++) {\n            const y = topMargin + i * spacing;\n            this.screen.render(Sprites.ram, leftMargin, y);\n\n            const lineHeight = y + (Sprites.ram.height / 2);\n            this.screen.renderLine(lineMarginX, lineHeight, lineMarginX + lineWidth, lineHeight, 0.5, '#ffffff');\n        }\n\n        this.screen.renderLine(lineMarginX + lineWidth, 0, lineMarginX + lineWidth, config.BottomUiBarHeight, 0.5, '#ffffff');\n    }\n\n    private renderEntities(): void {\n        const entities = this.level.getEntities().sort((a, b) => a.renderOrder - b.renderOrder);\n\n        for(const entity of entities) {\n            entity.render(this.screen);\n        }\n    }\n}","import { IAction } from \"../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../libs/Core/Action/Unit\";\nimport { IUIManager } from \"../../libs/Core/UI/IUIManager\";\nimport { config } from \"../Config\";\nimport { PlayerActions } from \"../Entity/Player/PlayerActions\";\nimport { PlayerStats } from \"../Entity/Player/PlayerStats\";\nimport { Main } from \"../Main\";\n\nexport class MouseClickAction implements IAction {\n    constructor(public readonly x: number, public readonly y: number) { }\n}\n\nexport class MouseClickActionHandler implements IActionHandler<MouseClickAction> {\n\n    constructor(\n        private readonly uiManager: IUIManager, \n        private readonly playerActions: PlayerActions, \n        private readonly playerStats: PlayerStats) { }\n\n    public handle(action: MouseClickAction): Unit {\n        const x = action.x / config.renderScale;\n        const y = action.y / config.renderScale;\n\n        // console.log(`Mouseclick at: ${action.x} ${action.y}`);\n\n        if (Main.paused) return;\n        if (this.playerStats.isDied()) return;\n        \n        this.uiManager.handleClick(x, y);\n        this.playerActions.useBroom(x, y);\n\n        return Unit.value;\n    }\n}","import { IAction } from \"../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../libs/Core/Action/Unit\";\nimport { IUIManager } from \"../../libs/Core/UI/IUIManager\";\nimport { config } from \"../Config\";\n\nexport class MouseDragAction implements IAction {\n    constructor(public readonly x: number, public readonly y: number) { }\n}\n\nexport class MouseDragActionHandler implements IActionHandler<MouseDragAction> {\n\n    constructor(private readonly uiManager: IUIManager) { }\n\n    public handle(action: MouseDragAction): Unit {\n        const x = action.x / config.renderScale;\n        const y = action.y / config.renderScale;\n\n        // console.log(`DRAG at: ${action.x} ${action.y}`);\n\n        this.uiManager.handleDrag(x, y);\n\n        return Unit.value;\n    }\n}","import { IAction } from \"../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../libs/Core/Action/Unit\";\nimport { IUIManager } from \"../../libs/Core/UI/IUIManager\";\nimport { config } from \"../Config\";\n\nexport class MouseMoveAction implements IAction {\n    constructor(public readonly x: number, public readonly y: number) { }\n}\n\nexport class MouseMoveActionHandler implements IActionHandler<MouseMoveAction> {\n\n    constructor(private readonly uiManager: IUIManager) { }\n\n    public handle(action: MouseMoveAction): Unit {\n        const x = action.x / config.renderScale;\n        const y = action.y / config.renderScale;\n\n        // console.log(`Mousemove at: ${action.x} ${action.y}`);\n\n        this.uiManager.handleHover(x, y);\n\n        return Unit.value;\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../../libs/Core/Action/Unit\";\nimport { Maths } from \"../../../libs/Core/Util/Maths\";\nimport { config } from \"../../Config\";\nimport { Entity } from \"../../Entity/Entity\";\nimport { ItemEntity } from \"../../Entity/ItemEntity\";\nimport { PlayerStats } from \"../../Entity/Player/PlayerStats\";\nimport { VariableMobEntity } from \"../../Entity/VariableMobEntity\";\nimport { ILevel } from \"../../Level/ILevel\";\nimport { Sprites } from \"../../Sprites\";\nimport { UpgradeType } from \"../../Upgrades/UpgradeType\";\n\nexport class UseBroomAction implements IAction {\n    constructor(\n        public readonly x: number, \n        public readonly y: number) { }\n}\n\nexport class UseBroomActionHandler implements IActionHandler<UseBroomAction> {\n\n    constructor(\n        private readonly level: ILevel, \n        private readonly playerStats: PlayerStats) { }\n        \n    public handle(action: UseBroomAction): Unit {\n        const mobEntities = this.level.getEntities().filter(this.isVariableMobEntity);\n        const itemEntities = this.level.getEntities().filter(this.isItemEntity);\n        const broomLevel = this.playerStats.getUpgradeLevel(UpgradeType.Broom);\n        const damage = config.broomBaseDamage * config.getBroomDamageModifier(broomLevel);\n\n        for(const item of itemEntities) {\n            if (Maths.intersects(action.x, action.y, Sprites.broom.width, Sprites.broom.height, item.x, item.y, item.getSprite().width, item.getSprite().height)) {\n                item.pickup(this.playerStats);\n            }\n        }\n\n        for(const entity of mobEntities) {\n            if (Maths.intersects(action.x, action.y, Sprites.broom.width, Sprites.broom.height, entity.x, entity.y, entity.getSprite().width, entity.getSprite().height)) {\n                entity.dealDamage(damage);\n            }\n        }\n\n        return Unit.value;\n    }\n\n    private isVariableMobEntity(e: Entity): e is VariableMobEntity {\n        return e instanceof VariableMobEntity;\n    }\n\n    private isItemEntity(e: Entity): e is ItemEntity {\n        return e instanceof ItemEntity;\n    }\n}","import { IAction } from \"../../../libs/Core/Action/IAction\";\nimport { IActionHandler } from \"../../../libs/Core/Action/IActionHandler\";\nimport { Unit } from \"../../../libs/Core/Action/Unit\";\nimport { IScreen } from \"../../../libs/Core/Screen/IScreen\";\nimport { config } from \"../../Config\";\nimport { CpuThreadMobEntity } from \"../../Entity/CpuThread/CpuThreadMobEntity\";\nimport { NpuCoreMobEntity } from \"../../Entity/NpuCore/NpuCoreMobEntity\";\nimport { PlayerStats } from \"../../Entity/Player/PlayerStats\";\nimport { ILevel } from \"../../Level/ILevel\";\nimport { Upgrade } from \"../../Upgrades/Upgrade\";\nimport { UpgradeType } from \"../../Upgrades/UpgradeType\";\n\nexport class BuyPlaceableAction implements IAction {\n    constructor(\n        public readonly upgrade: Upgrade, \n        public readonly x: number, \n        public readonly y: number) { }\n}\n\nexport class BuyPlaceableActionHandler implements IActionHandler<BuyPlaceableAction> {\n    constructor(\n        private readonly playerStats: PlayerStats, \n        private readonly level: ILevel, \n        private readonly screen: IScreen) { }\n\n    public handle(action: BuyPlaceableAction): Unit {\n        const entity = action.upgrade.upgradeType == UpgradeType.CpuThread ? \n            new CpuThreadMobEntity(action.x, action.y) : \n            new NpuCoreMobEntity(action.x, action.y);\n\n        if (action.x < config.leftUiBarWidth) return;\n        if (action.y < 0) return;\n        if (action.x + entity.getSprite().width > this.screen.getSize().width) return;\n        if (action.y + entity.getSprite().height > config.BottomUiBarHeight) return;\n\n        this.playerStats.buyUpgrade(action.upgrade);\n        this.level.add(entity);\n\n        return Unit.value;\n    }\n}","const screenHeight = 600;\nconst renderScale = 3;\n\nexport const config = {\n    imageBasePath: \"./data/images\",\n    soundBasePath: \"./data/sounds\",\n    renderScale: renderScale,\n    screenWidth: 800,\n    screenHeight: screenHeight,\n    leftUiBarWidth: 15,\n    BottomUiBarHeight: (screenHeight / renderScale) - 25,\n    cpuThreadModifierPerLevelPercentage: 15,\n    memoryIncreasePerLevel: 10,\n    broomDamageIncreasePerLevelPercentage: 60,\n    broomBaseDamage: 1.25,\n    getBroomDamageModifier: (level: number) => (config.broomDamageIncreasePerLevelPercentage / 100) * level + 1,\n    getCpuThreadModifier: (level: number) => (config.cpuThreadModifierPerLevelPercentage / 100) * level + 1,\n}","import { Sprite } from \"../../../libs/Core/Screen/Sprite\";\nimport { Sprites } from \"../../Sprites\";\nimport { WorkerEntity } from \"../WorkerEntity\";\n\nexport class CpuThreadMobEntity extends WorkerEntity {\n    constructor(x: number, y: number) {\n        super(x, y, 'cpu', 300);\n    }\n\n    public override getSprite(): Sprite {\n        return Sprites.cpuIcon;\n    }\n}","import { Sprite } from \"../../../libs/Core/Screen/Sprite\";\nimport { Sprites } from \"../../Sprites\";\nimport { ProjectileEntity } from \"../ProjectileEntity\";\n\nexport class CpuThreadProjectileEntity extends ProjectileEntity {\n    constructor(x: number, y: number, directionX: number, directionY: number, speedModifier: number, damageModifier: number) {\n        super(x, y, directionX, directionY, 0.6, 1, speedModifier, damageModifier);\n    }\n\n    public override getSprite(): Sprite {\n        return Sprites.cpuProjectile;\n    }\n}","import { IAction } from \"../../libs/Core/Action/IAction\";\nimport { IActionExecutor } from \"../../libs/Core/Action/IActionExecutor\";\nimport { IScreen } from \"../../libs/Core/Screen/IScreen\";\nimport { Sprite } from \"../../libs/Core/Screen/Sprite\";\n\nexport abstract class Entity {\n    public x: number;\n    public y: number;\n    public removed: boolean;\n    public renderOrder = 0;\n\n    private actionExecutor: IActionExecutor;\n\n    public abstract getSprite(): Sprite;\n    public abstract canPass(): boolean;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public render(screen: IScreen): void {\n        screen.render(this.getSprite(), this.x, this.y);\n    }\n\n    public onCreate(actionExecutor: IActionExecutor): void {\n        this.actionExecutor = actionExecutor;\n    }\n\n    public tick(): void {\n        \n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public onCollide(entity: Entity): void {\n\n    }\n\n    protected executeAction<T>(action: IAction): T {\n        return this.actionExecutor.execute(action);\n    }\n}","import { IScreen } from \"../../libs/Core/Screen/IScreen\";\nimport { Sprite } from \"../../libs/Core/Screen/Sprite\";\nimport { Entity } from \"./Entity\";\nimport { PlayerStats } from \"./Player/PlayerStats\";\n\ntype FloatingDirection = 'up' | 'down';\n\nconst despawnRateInTicks = 900;\nconst floatingDirectionTicks = 55;\n\nexport abstract class ItemEntity extends Entity {\n    private ticksTillDespawn = despawnRateInTicks;\n\n    private floatingDirection: FloatingDirection = 'up';\n    private floatingOffsetTicks: number = 0;\n\n    public abstract pickup(playerStats: PlayerStats): void;\n    public abstract getEffectSprite(): Sprite;\n\n    constructor(x: number, y: number) {\n        super(x, y);\n        this.renderOrder = 10;\n    }\n\n    public override canPass(): boolean {\n        return true;\n    }\n\n    public override tick(): void {\n        super.tick();\n        \n        if (this.floatingDirection === 'up') {\n            this.floatingOffsetTicks++;\n        }\n\n        if (this.floatingDirection === 'down') {\n            this.floatingOffsetTicks--;\n        }\n\n        if (this.floatingOffsetTicks === floatingDirectionTicks) {\n            this.floatingDirection = 'down';\n        } else if(this.floatingOffsetTicks === 0) {\n            this.floatingDirection = 'up';\n        }\n\n        this.ticksTillDespawn--;\n\n        if (this.ticksTillDespawn === 0) {\n            this.removed = true;\n        }\n    }\n\n    public override render(screen: IScreen) {\n        const offsetY = -(this.floatingOffsetTicks * 0.07);\n        screen.render(this.getSprite(), this.x, this.y + offsetY);\n\n        screen.render(this.getEffectSprite(), this.x + this.getSprite().width, this.y + offsetY);\n    }\n}","import { Sprite } from \"../../../libs/Core/Screen/Sprite\";\nimport { Sprites } from \"../../Sprites\";\nimport { Upgrades } from \"../../Upgrades/Upgrades\";\nimport { ItemEntity } from \"../ItemEntity\";\nimport { PlayerStats } from \"../Player/PlayerStats\";\n\nexport class CpuOverclockItem extends ItemEntity {\n\n    public pickup(playerStats: PlayerStats) {\n        this.removed = true;\n        playerStats.giveUpgrade(Upgrades.cpuOverclock);\n    }\n\n    public getSprite(): Sprite {\n        return Sprites.overclockIcon;\n    }\n\n    public getEffectSprite(): Sprite {\n        return Sprites.itemUpgradeIcon;\n    }\n}","import { Sprite } from \"../../../libs/Core/Screen/Sprite\";\nimport { Sprites } from \"../../Sprites\";\nimport { ItemEntity } from \"../ItemEntity\";\nimport { PlayerStats } from \"../Player/PlayerStats\";\n\nexport class RamRepairItem extends ItemEntity {\n\n    public pickup(playerStats: PlayerStats) {\n        this.removed = true;\n        playerStats.addHealth(10);\n    }\n\n    public getSprite(): Sprite {\n        return Sprites.ramIcon;\n    }\n\n    public getEffectSprite(): Sprite {\n        return Sprites.itemPlusIcon;\n    }\n}","import { Sprite } from \"../../../libs/Core/Screen/Sprite\";\nimport { ClearLevelAction } from \"../../Actions/Level/ClearLevel\";\nimport { Sprites } from \"../../Sprites\";\nimport { ItemEntity } from \"../ItemEntity\";\nimport { PlayerStats } from \"../Player/PlayerStats\";\n\nexport class RestartItem extends ItemEntity {\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public pickup(playerStats: PlayerStats) {\n        this.removed = true;\n        this.executeAction(new ClearLevelAction());\n    }\n\n    public getSprite(): Sprite {\n        return Sprites.restartIcon;\n    }\n\n    public getEffectSprite(): Sprite {\n        return Sprites.itemPlusIcon;\n    }\n}","import { IAnimation } from \"../../libs/Animation/IAnimation\";\nimport { Sprite } from \"../../libs/Core/Screen/Sprite\";\nimport { Directions } from \"../../libs/Core/Util/Direction\";\nimport { MoveMobEntityAction } from \"../Actions/Entity/MoveMobEntity\";\nimport { Entity } from \"./Entity\";\n\nexport abstract class MobEntity extends Entity {\n    public direction = Directions.down;\n    public animationIndex = 0;\n    public walkTime = 0;\n    public animations: IAnimation;\n\n    protected speed = 1.0;\n    \n    public override getSprite(): Sprite {\n        return this.animations ? this.animations.get(this.direction, this.animationIndex) : this.getSprite();\n    }\n\n    public override canPass(): boolean {\n        return true;\n    }\n\n    public teleport(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    protected move(moveX: number, moveY: number): void {\n        this.executeAction(new MoveMobEntityAction(this, moveX, moveY));\n    }\n\n    public getSpeed() {\n        return this.speed;\n    }\n}","import { VariableMobEntity } from \"../VariableMobEntity\";\n\nexport class ArrayMobEntity extends VariableMobEntity {\n    constructor() {\n        super({ name: 'String[] todo', width: 31, height: 9, speed: 0.22, damage: 8, health: 5, points: 3 });\n    }\n}","import { VariableMobEntity } from \"../VariableMobEntity\";\n\nexport class ForLoopMobEntity extends VariableMobEntity {\n    constructor() {\n        super({ name: 'int i', width: 12, height: 9, speed: 1.32, damage: 5, health: 0.1, points: 5 });\n    }\n}","import { VariableMobEntity } from \"../VariableMobEntity\";\n\nexport class HashMapMobEntity extends VariableMobEntity {\n    constructor() {\n        super({ name: 'HashMap<> holyGrail', width: 44, height: 7, speed: 0.30, damage: 10, health: 8, points: 6 });\n    }\n}","import { VariableMobEntity } from \"../VariableMobEntity\";\n\nexport class HelloWorldMobEntity extends VariableMobEntity {\n    constructor() {\n        super({ name: 'string helloWorld', width: 37, height: 9, speed: 0.25, damage: 5, health: 1, points: 2 });\n    }\n}","import { VariableMobEntity } from \"../VariableMobEntity\";\n\nexport class NodeModulesMobEntity extends VariableMobEntity {\n    constructor() {\n        super({ name: 'node_modules', width: 37, height: 16, speed: 0.05, damage: 15, health: 15, points: 15 });\n    }\n}","import { VariableMobEntity } from \"../VariableMobEntity\";\n\nexport class PrintMobEntity extends VariableMobEntity {\n    constructor() {\n        super({ name: 'print(\\'debug\\')', width: 32, height: 10, speed: 0.35, damage: 7, health: 0.5, points: 2 });\n    }\n}","import { VariableMobEntity } from \"../VariableMobEntity\";\n\nexport class TodoCommentMobEntity extends VariableMobEntity {\n    constructor() {\n        super({ name: 'TODO: fix later', width: 32, height: 10, speed: 0.04, damage: 25, health: 15, points: 8 });\n    }\n}","import { Sprite } from \"../../../libs/Core/Screen/Sprite\";\nimport { Sprites } from \"../../Sprites\";\nimport { WorkerEntity } from \"../WorkerEntity\";\n\nexport class NpuCoreMobEntity extends WorkerEntity {\n    constructor(x: number, y: number) {\n        super(x, y, 'npu', 300);\n    }\n\n    public override getSprite(): Sprite {\n        return Sprites.npuIcon;\n    }\n}","import { Sprite } from \"../../../libs/Core/Screen/Sprite\";\nimport { Sprites } from \"../../Sprites\";\nimport { ProjectileEntity } from \"../ProjectileEntity\";\n\nexport class NpuCoreProjectileEntity extends ProjectileEntity {\n    constructor(x: number, y: number, directionX: number, directionY: number) {\n        super(x, y, directionX, directionY, 0.9, 40, 1.0, 1.0);\n        this.destroyOnCollide = false;\n    }\n\n    public override getSprite(): Sprite {\n        return Sprites.npuProjectile;\n    }\n}","import { IActionExecutor } from \"../../../libs/Core/Action/IActionExecutor\";\nimport { Mouse } from \"../../../libs/Core/Input/Mouse\";\nimport { IScreen } from \"../../../libs/Core/Screen/IScreen\"\nimport { UseBroomAction } from \"../../Actions/Player/UseBroomAction\";\nimport { config } from \"../../Config\";\nimport { Sprites } from \"../../Sprites\";\n\nexport class PlayerActions {\n    //private broomCooldown = 120;\n    //private broomCooldownTimeLeft = 0;\n\n    private broomAnimationAnimationTime = 26;\n    private broomAnimationAnimationTimeLeft = 0;\n\n    constructor(private readonly actionExecutor: IActionExecutor) { }\n\n    public tick() {\n        //if (this.broomCooldownTimeLeft > 0) {\n        //    this.broomCooldownTimeLeft--;\n        //}\n\n        if (this.broomAnimationAnimationTimeLeft > 0) {\n            this.broomAnimationAnimationTimeLeft--;\n        }\n    }\n\n    public useBroom(x: number, y: number) {\n        //if (this.broomCooldownTimeLeft > 0) return;\n\n        if (this.broomAnimationAnimationTimeLeft <= 0) {\n            this.broomAnimationAnimationTimeLeft = this.broomAnimationAnimationTime;\n        }\n        //this.broomCooldownTimeLeft = this.broomCooldown;\n\n        this.actionExecutor.execute(new UseBroomAction(x, y));\n    }\n\n    public render(screen: IScreen) {\n        const mouseX = Mouse.x / config.renderScale;\n        const mouseY = Mouse.y / config.renderScale;\n        \n        if (mouseX > config.leftUiBarWidth && mouseY < config.BottomUiBarHeight) {\n            screen.setCursorVisibility(false);\n            const sprite = this.broomAnimationAnimationTimeLeft >= (this.broomAnimationAnimationTime / 2) ? Sprites.broom2 : Sprites.broom;\n            screen.render(sprite, mouseX, mouseY);\n        } else {\n            screen.setCursorVisibility(true);\n        }\n    }\n}","import { config } from \"../../Config\";\nimport { Upgrade } from \"../../Upgrades/Upgrade\";\nimport { UpgradeType } from \"../../Upgrades/UpgradeType\";\n\nexport class PlayerStats {\n    private maxHealth: number;\n    private health: number;\n    private score: number;\n    private points: number;\n    private wave: number;\n    private upgradeLevels: Record<UpgradeType, number>;\n\n    public initialize() {\n        this.maxHealth = 100;\n        this.health = 100;\n        this.score = 0;\n        this.points = 0;\n        this.wave = 0;\n        this.upgradeLevels = {\n            [UpgradeType.CpuOverclock]: 1,\n            [UpgradeType.Ram]: 1,\n            [UpgradeType.Broom]: 1,\n            [UpgradeType.CpuThread]: 1,\n            [UpgradeType.NpuCore]: 1,\n        };\n    }\n\n    public dealDamage(amount: number) {\n        this.health -= amount;\n\n        if (this.isDied()) {\n            // TODO: Death sound\n        }\n    }\n\n    public addHealth(amount: number) {\n        this.health += amount;\n\n        if (this.health > this.maxHealth) {\n            this.health = this.maxHealth;\n        }\n    }\n\n    public getHealth(): number {\n        return this.health;\n    }\n\n    public addMaxHealth(amount: number) {\n        this.maxHealth += amount;\n    }\n\n    public getMaxHealth(): number {\n        return this.maxHealth;\n    }\n\n    public canBuyUpgrade(upgrade: Upgrade): boolean {\n        const level = this.upgradeLevels[upgrade.upgradeType];\n        const cost = upgrade.cost(level);\n\n        return this.points >= cost;\n    }\n\n    public buyUpgrade(upgrade: Upgrade): boolean {\n        if (!this.canBuyUpgrade(upgrade)) return false;\n        \n        const level = this.upgradeLevels[upgrade.upgradeType];\n        const cost = upgrade.cost(level);\n        \n        this.removePoints(cost);\n        this.giveUpgrade(upgrade);\n\n        // TODO: Upgrades - play sound to let player know\n        return true;\n    }\n\n    public giveUpgrade(upgrade: Upgrade): void {\n        const level = this.upgradeLevels[upgrade.upgradeType];\n\n        this.upgradeLevels[upgrade.upgradeType] = level + 1;\n\n        if (upgrade.upgradeType === UpgradeType.Ram) {\n            this.maxHealth += config.memoryIncreasePerLevel;\n            this.health += config.memoryIncreasePerLevel;\n        }\n    }\n\n    public getUpgradeLevel(upgradeType: UpgradeType): number {\n        return this.upgradeLevels[upgradeType];\n    }\n\n    public addScore(score: number) {\n        this.score += score;\n    }\n\n    public getScore(): number {\n        return this.score;\n    }\n\n    public addPoints(amount: number) {\n        this.points += amount;\n    }\n\n    public removePoints(amount: number) {\n        this.points -= amount;\n    }\n\n    public getPoints(): number {\n        return this.points;\n    }\n\n    public increaseWave() {\n        this.wave++;\n    }\n\n    public getWave(): number {\n        return this.wave;\n    }\n\n    public isDied(): boolean {\n        return this.getHealth() <= 0;\n    }\n}","import { config } from \"../Config\";\nimport { Entity } from \"./Entity\";\nimport { MobEntity } from \"./MobEntity\";\nimport { VariableMobEntity } from \"./VariableMobEntity\";\n\nexport abstract class ProjectileEntity extends MobEntity {\n    private readonly directionX: number;\n    private readonly directionY: number;\n    \n    protected destroyOnCollide = true;\n\n    private damage: number;\n\n    constructor(x: number, y: number, directionX: number, directionY: number, speed: number, damage: number, speedModifier: number, damageModifier: number) {\n        super(x, y);\n        this.damage = damage * damageModifier;\n        this.speed = speed * speedModifier;\n        this.directionX = directionX;\n        this.directionY = directionY;\n        this.renderOrder = 9;\n    }\n\n    public override tick() {\n        super.tick();\n\n        const moveX = this.directionX * this.speed;\n        const moveY = this.directionY * this.speed;\n\n        this.move(moveX, moveY);\n\n        const screenWidth = (config.screenWidth / config.renderScale);\n        if (this.x < config.leftUiBarWidth || this.x > screenWidth || this.y < 0 || this.y > config.BottomUiBarHeight) {\n            this.removed = true;\n        }\n    }\n\n    public override onCollide(entity: Entity): void {\n        if (!(entity instanceof VariableMobEntity)) return;\n\n        const variableMobEntity = entity as VariableMobEntity;\n\n        variableMobEntity.dealDamage(this.damage);\n\n        if (this.destroyOnCollide) {\n            this.removed = true;\n        } else {\n            this.damage *= 0.5;\n\n            if (this.damage < 1) {\n                this.removed = true;\n            }\n        }\n    }\n}","import { IScreen } from \"../../libs/Core/Screen/IScreen\";\nimport { Sprite } from \"../../libs/Core/Screen/Sprite\";\nimport { DamageRamAction } from \"../Actions/Entity/DamageRam\";\nimport { IncreasePointsAction } from \"../Actions/Entity/IncreasePoints\";\nimport { IncreaseScoreAction } from \"../Actions/Entity/IncreaseScoreAction\";\nimport { config } from \"../Config\";\nimport { MobEntity } from \"./MobEntity\";\n\nexport abstract class VariableMobEntity extends MobEntity {\n    private readonly options: VariableMobOptions;\n    private maxHealth: number;\n    private health: number;\n\n    private readonly healthBarWidth = 15;\n\n    constructor(options: VariableMobOptions) {\n        super(0, 0);\n        this.options = options;\n        this.speed = options.speed;\n        this.maxHealth = options.health;\n        this.health = options.health;\n        this.renderOrder = 1;\n    }\n\n    public getSprite(): Sprite {\n        return { loaded: true, width: this.options.width, height: this.options.height } as Sprite;\n    }\n\n    public override tick(): void {\n        super.tick();\n\n        this.move(-this.speed, 0);\n\n        if (this.x <= config.leftUiBarWidth) {\n            this.executeAction(new DamageRamAction(this.options.damage));\n            this.removed = true;\n            return;\n        }\n    }\n\n    public setHealthModifier(modifier: number) {\n        this.maxHealth *= modifier;\n        this.health = this.maxHealth;\n    }\n\n    public setSpeedModifier(modifier: number) {\n        this.speed *= modifier;\n    }\n\n    public override render(screen: IScreen): void {\n        screen.renderRectangle(this.x, this.y, this.getSprite().width, this.getSprite().height, { color: '#f8f8f8', alpha: 0.6 });\n        screen.renderText(this.options.name, this.x + 2, this.y + (this.getSprite().height / 2) + 1, { fontColor: '#122285', fontSize: 4, fontWeight: 600 })\n\n        const healthSize = (this.healthBarWidth / this.maxHealth) * this.health;\n        screen.renderRectangle(this.x + (this.getSprite().width / 2) - (this.healthBarWidth / 2), this.y - 3, this.healthBarWidth, 1, { color: 'red' });\n        screen.renderRectangle(this.x + (this.getSprite().width / 2) - (this.healthBarWidth / 2), this.y - 3, healthSize, 1, { color: 'green' });\n    }\n\n    public dealDamage(amount: number) {\n        this.health -= amount;\n\n        if (this.health <= 0) {\n            this.removed = true;\n            this.executeAction(new IncreasePointsAction(this.options.points));\n            this.executeAction(new IncreaseScoreAction(this.options.damage));\n        }\n    }\n}\n\nexport interface VariableMobOptions {\n    name: string;\n    width: number;\n    height: number;\n    speed: number;\n    damage: number;\n    health: number;\n    points: number;\n}","import { WorkerFireProjectileAction } from \"../Actions/Entity/WorkerFireProjectile\";\nimport { MobEntity } from \"./MobEntity\";\n\nexport abstract class WorkerEntity extends MobEntity {\n    public timeSinceLastAttack = 0;\n    public workerType: WorkerType;\n    public attackDelay: number;\n\n    constructor(x: number, y: number, workerType: WorkerType, attackDelay: number) {\n        super(x, y);\n        this.speed = 0;\n        this.workerType = workerType;\n        this.attackDelay = attackDelay;\n    }\n\n    public override tick() {\n        super.tick();\n\n        this.executeAction(new WorkerFireProjectileAction(this));\n    }\n}\n\nexport type WorkerType = 'cpu' | 'npu';","import { Key } from \"../libs/Core/Input/Key\";\n\nexport const keyBinds = {\n    pause: new Key(['p', 'P', 'Escape']),\n    restart: new Key([' ']),\n};","import { IActionExecutor } from \"../../libs/Core/Action/IActionExecutor\";\nimport { RenderLevelAction } from \"../Actions/Level/RenderLevel\";\nimport { Entity } from \"../Entity/Entity\";\nimport { ILevel } from \"./ILevel\";\n\nclass Level implements ILevel {\n\n    private readonly actionExecutor: IActionExecutor;\n\n    private entities: Array<Entity>;\n    \n    constructor(actionExecutor: IActionExecutor) {\n        this.entities = new Array<Entity>();\n        this.actionExecutor = actionExecutor;\n    }\n\n    public tick(): void {\n        for(const entity of this.entities) {\n            entity.tick();\n        }\n\n        this.entities = this.entities.filter(e => !e.removed);\n    }\n\n    public render(): void {\n        this.actionExecutor.execute(new RenderLevelAction());\n    }\n\n    public add(entity: Entity): void {\n        entity.onCreate(this.actionExecutor);\n        this.entities.push(entity);\n    }\n\n    public getEntities(): Array<Entity> {\n        return this.entities.filter(e => !e.removed);\n    }\n}\n\nexport const createLevel = (actionExecutor: IActionExecutor) => new Level(actionExecutor);","import { IScreen } from '../libs/Core/Screen/IScreen';\nimport { KeyHandler } from '../libs/Core/Input/KeyHandler';\nimport { createScreen2D } from '../libs/Core/Screen/Screen';\nimport { config } from './Config';\nimport { keyBinds } from './Keybinds';\nimport { ILevel } from './Level/ILevel';\nimport { settings } from '../libs/Core/Settings/Settings';\nimport { ITaskManager } from '../libs/Core/Task/ITaskManager';\nimport { createTaskManager } from '../libs/Core/Task/TaskManager';\nimport { IActionExecutor } from '../libs/Core/Action/IActionExecutor';\nimport { createActionExecutor } from '../libs/Core/Action/ActionExecutor';\nimport { MoveMobEntityAction, MoveMobEntityActionHandler } from './Actions/Entity/MoveMobEntity';\nimport { RenderLevelAction, RenderLevelActionHandler } from './Actions/Level/RenderLevel';\nimport { IUIManager } from '../libs/Core/UI/IUIManager';\nimport { createUIManager } from '../libs/Core/UI/UIManager';\nimport { MouseHandler } from '../libs/Core/Input/MouseHandler';\nimport { MouseClickAction, MouseClickActionHandler } from './Actions/MouseClickAction';\nimport { MouseMoveAction, MouseMoveActionHandler } from './Actions/MouseMovedAction';\nimport { MouseDragAction, MouseDragActionHandler } from './Actions/MouseDragAction';\nimport { GenerateLevelAction, GenerateLevelActionHandler } from './Actions/Level/GenerateLevel';\nimport { PlayerStats } from './Entity/Player/PlayerStats';\nimport { UITypes } from './UITypes';\nimport { BottomUi } from './UI/BottomUi';\nimport { EnemyWaveTask } from './Tasks/EnemyWaveTask';\nimport { DamageRamAction, DamageRamActionHandler } from './Actions/Entity/DamageRam';\nimport { BuyPlaceableAction, BuyPlaceableActionHandler } from './Actions/Upgrades/BuyPlaceableUpgrade';\nimport { WorkerFireProjectileAction, WorkerFireProjectileActionHandler } from './Actions/Entity/WorkerFireProjectile';\nimport { IncreasePointsAction, IncreasePointsActionHandler } from './Actions/Entity/IncreasePoints';\nimport { IncreaseScoreAction, IncreaseScoreActionHandler } from './Actions/Entity/IncreaseScoreAction';\nimport { PlayerActions } from './Entity/Player/PlayerActions';\nimport { UseBroomAction, UseBroomActionHandler } from './Actions/Player/UseBroomAction';\nimport { ItemSpawnTask } from './Tasks/ItemSpawnTask';\nimport { ClearLevelAction, ClearLevelActionHandler } from './Actions/Level/ClearLevel';\nimport { RenderTextOptions } from '../libs/Core/Screen/RenderTextOptions';\n\nglobalThis.settings = settings;\n\nexport class Main {\n    private readonly screen: IScreen;\n    private level: ILevel;\n    private readonly playerActions: PlayerActions;\n    private readonly playerStats: PlayerStats;\n    private readonly taskManager: ITaskManager;\n    private readonly actionExecutor: IActionExecutor;\n    private readonly uiManager: IUIManager;\n\n    private lastFrameTimeMs = 0;\n    private timestep = 1000 / 60;\n    private delta = 0;\n    private frames = 0;\n    private last = new Date().getTime();\n    private ticks = 0;\n\n    public static paused = false;\n    \n    constructor() {\n        this.actionExecutor = createActionExecutor();\n        this.playerStats = new PlayerStats();\n        this.playerActions = new PlayerActions(this.actionExecutor);\n        this.screen = createScreen2D(config.renderScale);\n        this.taskManager = createTaskManager();\n        this.uiManager = createUIManager();\n\n        this.addUI();\n        this.registerActions();\n        this.addInputListeners();\n\n        this.initialize();\n\n        this.screen.setSize(config.screenWidth, config.screenHeight);\n\n        this.run(0);\n    }\n\n    private initialize(): void {\n        this.playerStats.initialize();\n        this.level = this.actionExecutor.execute<ILevel>(new GenerateLevelAction());\n        this.taskManager.clear();\n        this.taskManager.add(new EnemyWaveTask(this.level, this.playerStats));\n        this.taskManager.add(new ItemSpawnTask(this.level));\n    }\n\n    private registerActions(): void {\n        this.actionExecutor.register(MoveMobEntityAction.name, () => new MoveMobEntityActionHandler(this.level));\n        this.actionExecutor.register(DamageRamAction.name, () => new DamageRamActionHandler(this.playerStats));\n        this.actionExecutor.register(RenderLevelAction.name, () => new RenderLevelActionHandler(this.level, this.screen));\n        this.actionExecutor.register(MouseClickAction.name, () => new MouseClickActionHandler(this.uiManager, this.playerActions, this.playerStats));\n        this.actionExecutor.register(MouseMoveAction.name, () => new MouseMoveActionHandler(this.uiManager));\n        this.actionExecutor.register(MouseDragAction.name, () => new MouseDragActionHandler(this.uiManager));\n        this.actionExecutor.register(GenerateLevelAction.name, () => new GenerateLevelActionHandler(this.actionExecutor));\n        this.actionExecutor.register(BuyPlaceableAction.name, () => new BuyPlaceableActionHandler(this.playerStats, this.level, this.screen));\n        this.actionExecutor.register(WorkerFireProjectileAction.name, () => new WorkerFireProjectileActionHandler(this.level, this.playerStats));\n        this.actionExecutor.register(IncreasePointsAction.name, () => new IncreasePointsActionHandler(this.playerStats));\n        this.actionExecutor.register(IncreaseScoreAction.name, () => new IncreaseScoreActionHandler(this.playerStats));\n        this.actionExecutor.register(UseBroomAction.name, () => new UseBroomActionHandler(this.level, this.playerStats));\n        this.actionExecutor.register(ClearLevelAction.name, () => new ClearLevelActionHandler(this.level));\n    }\n\n    private addInputListeners(): void {\n        KeyHandler.init(keyBinds);\n        MouseHandler.bind('click', (x, y) => this.actionExecutor.execute(new MouseClickAction(x, y)));\n        MouseHandler.bind('mousemove', (x, y) => this.actionExecutor.execute(new MouseMoveAction(x, y)));\n        MouseHandler.bind('mousedrag', (x, y) => this.actionExecutor.execute(new MouseDragAction(x, y)));\n    }\n\n    private addUI(): void {\n        this.uiManager.add(UITypes.Bottom, new BottomUi(this.playerStats, this.actionExecutor));\n        this.uiManager.toggle(UITypes.Bottom);\n    }\n    \n    private run(timestamp: number): void {\n        this.delta += timestamp - this.lastFrameTimeMs;\n        this.lastFrameTimeMs = timestamp;\n        \n        while (this.delta >= this.timestep) {\n            this.delta -= this.timestep;\n            this.ticks++;\n            this.tick();\n        }\n    \n        this.render();\n        this.frames++;\n    \n        const current = new Date().getTime();\n        if (current - this.last >= 3000) {\n            this.last = current;\n            console.log(`Ticks: ${this.ticks / 3}, FPS: ${this.frames / 3}`);\n            this.frames = 0;\n            this.ticks = 0;\n        }\n    \n        requestAnimationFrame((timestamp) => this.run(timestamp));\n    }\n\n    private tick(): void {\n        if (settings.menu() !== 'game') return;\n\n        if (keyBinds.pause.isPressed && !this.playerStats.isDied()) {\n            keyBinds.pause.release();\n            Main.paused = !Main.paused;\n        }\n\n        if (Main.paused) return;\n\n        if (this.playerStats.isDied()) {\n            if (keyBinds.restart.isPressed) {\n                keyBinds.restart.release();\n                this.initialize();\n            }\n            return;\n        }\n\n        this.playerActions.tick();\n        this.level.tick();\n        this.taskManager.tick();\n        this.uiManager.tick();\n    }\n\n    private render(): void {\n        if (settings.menu() !== 'game') return;\n        \n        this.level.render();\n        this.playerActions.render(this.screen);\n        this.uiManager.render(this.screen);\n\n        if (this.playerStats.isDied()) {\n            const textOptions: RenderTextOptions = { fontSize: 6, fontColor: '#ffffff', width: this.screen.getSize().width, textAlign: 'center' };\n            this.screen.renderRectangle(0, 0, this.screen.getSize().width, this.screen.getSize().height, { color: '#000000', alpha: 0.4 });\n            this.screen.renderText('Memory overload!', 0, (this.screen.getSize().height / 2) - 23, { ...textOptions, fontSize: 9 });\n            this.screen.renderText(`MB's cleaned: ${this.playerStats.getScore()}`, 0, (this.screen.getSize().height / 2) - 12, { ...textOptions });\n            this.screen.renderText('Press Space to try again', 0, (this.screen.getSize().height / 2) - 1, { ...textOptions });\n            return;\n        }\n\n        if (Main.paused) {\n            this.screen.renderRectangle(0, 0, this.screen.getSize().width, this.screen.getSize().height, { color: '#000000', alpha: 0.4 });\n            this.screen.renderText('Game paused', 0, (this.screen.getSize().height / 2) - 9, { fontSize: 9, fontColor: '#ffffff', width: this.screen.getSize().width, textAlign: 'center' });\n        }\n    }\n}\n\nnew Main();","import { Sprite } from \"../libs/Core/Screen/Sprite\";\nimport { config } from \"./Config\";\n\nexport class Sprites {\n    public static readonly ram = loadImage('ram.png');\n    public static readonly ramIcon = loadImage('ram_icon.png');\n    \n    public static readonly overclockIcon = loadImage('overclock_icon.png');\n\n    public static readonly npuIcon = loadImage('npu_icon.png');\n    public static readonly npuProjectile = loadImage('npu_projectile2.png');\n\n    public static readonly cpuIcon = loadImage('cpu_icon.png');\n    public static readonly cpuProjectile = loadImage('cpu_projectile.png');\n\n    public static readonly broom = loadImage('broom.png');\n    public static readonly broom2 = loadImage('broom2.png');\n\n    public static readonly background = loadImage('motherboard.png');\n    \n    public static readonly itemPlusIcon = loadImage('plus.png');\n    public static readonly itemUpgradeIcon = loadImage('item_upgrade_icon.png');\n    public static readonly restartIcon = loadImage('restart.png');\n}\n\nfunction loadImage(image: string): Sprite {\n    return new Sprite(`${config.imageBasePath}/${image}`);\n}","import { Task } from \"../../libs/Core/Task/Task\";\nimport { config } from \"../Config\";\nimport { ArrayMobEntity } from \"../Entity/Mobs/ArrayMobEntity\";\nimport { ForLoopMobEntity } from \"../Entity/Mobs/ForLoopMobEntity\";\nimport { HashMapMobEntity } from \"../Entity/Mobs/HashMapMobEntity\";\nimport { HelloWorldMobEntity } from \"../Entity/Mobs/HelloWorldMobEntity\";\nimport { NodeModulesMobEntity } from \"../Entity/Mobs/NodeModulesMobEntity\";\nimport { PrintMobEntity } from \"../Entity/Mobs/PrintMobEntity\";\nimport { TodoCommentMobEntity } from \"../Entity/Mobs/TodoCommentMobEntity\";\nimport { PlayerStats } from \"../Entity/Player/PlayerStats\";\nimport { VariableMobEntity } from \"../Entity/VariableMobEntity\";\nimport { ILevel } from \"../Level/ILevel\";\n\nconst baseSpawnInterval = 280; \nconst minSpawnInterval = 45;\nconst baseSpawnCount = 2;\nconst maxSpawnCount = 7;\n\ntype Spawn = () => VariableMobEntity;\ninterface SpawnInfo {\n    weightModifier: number;\n    spawn: Spawn;\n}\nconst spawnableEnemies: SpawnInfo[] = [\n    { weightModifier: 1.25, spawn: () => new HelloWorldMobEntity() },\n    { weightModifier: 0.7, spawn: () => new ArrayMobEntity() },\n    { weightModifier: 0.35, spawn: () => new TodoCommentMobEntity() },\n    { weightModifier: 0.23, spawn: () => new ForLoopMobEntity() },\n    { weightModifier: 0.5, spawn: () => new HashMapMobEntity() },\n    { weightModifier: 0.4, spawn: () => new PrintMobEntity() },\n    { weightModifier: 0.024, spawn: () => new NodeModulesMobEntity() }\n];\n\nexport class EnemyWaveTask extends Task {\n    private ticksPassed = 0;\n    private nextSpawnTicks = 20;\n\n    constructor(private readonly level: ILevel, private readonly playerStats: PlayerStats) {\n        super(1, true, 'waves');\n    }\n\n    public execute(): void {\n        this.ticksPassed++;\n\n        if (this.ticksPassed < this.nextSpawnTicks) return;\n\n        const secondsPassed = this.ticksPassed / 60;\n\n        const intervalReduction = Math.floor(secondsPassed / 20) * 4;\n        const clampedInterval = Math.max(minSpawnInterval, baseSpawnInterval - intervalReduction);\n\n        // Add randomness\n        const randomFactor = 1 + (Math.random() * 0.4 - 0.2);\n        const spawnInterval = Math.floor(clampedInterval * randomFactor);\n\n        const scaledCount = baseSpawnCount + Math.floor(secondsPassed / 20);\n        const clampedCount = Math.min(scaledCount, maxSpawnCount);\n\n        // Add randomness\n        const randomCount = Math.max(2, clampedCount + Math.floor(Math.random() * 3) - 2);\n\n        for(let i = 0; i < randomCount; i++) {\n            const entity = this.getEntityToSpawn();\n            const xOffset = Math.random() * (450 * entity.getSpeed());\n            const x = (config.screenWidth / config.renderScale) + xOffset;\n            const y = 5 + (Math.random() * (config.BottomUiBarHeight - 10 - entity.getSprite().height));\n\n            const healthModifier = 1 + ((this.ticksPassed) * 0.0003);\n            const speedModifier = 1 + ((this.ticksPassed) * 0.00006);\n            entity.teleport(x, y);\n            entity.setHealthModifier(healthModifier);\n            entity.setSpeedModifier(speedModifier);\n            this.level.add(entity);\n        }\n\n        this.nextSpawnTicks = this.ticksPassed + spawnInterval;\n    }\n\n    private getEntityToSpawn(): VariableMobEntity {\n        const maxIndex = Math.min(this.ticksPassed / 600, spawnableEnemies.length);\n        const weights: number[] = [];\n\n        const difficultyProgress = Math.min(this.ticksPassed / 30000, 1);\n        for (let i = 0; i < maxIndex; i++) {\n            const earlyWeight = 1 / (i + 1);\n            const lateWeight = (i + 1);\n            const weightModifierIncreaser = (i * ((this.ticksPassed * 1.2) * 0.000005));\n            const weight = (earlyWeight * (1 - difficultyProgress) + lateWeight * difficultyProgress * spawnableEnemies[i].weightModifier) + weightModifierIncreaser;\n            weights.push(weight);\n        }\n        \n        const totalWeight = weights.reduce((sum, w) => sum + w, 0);\n        const random = Math.random() * totalWeight;\n\n        let cumulative = 0;\n        for (let i = 0; i < weights.length; i++) {\n            cumulative += weights[i];\n            if (random <= cumulative) {\n                return spawnableEnemies[i].spawn();\n            }\n        }\n\n        return spawnableEnemies[0].spawn();\n    }\n}","import { Task } from \"../../libs/Core/Task/Task\";\nimport { config } from \"../Config\";\nimport { ItemEntity } from \"../Entity/ItemEntity\";\nimport { CpuOverclockItem } from \"../Entity/Items/CpuOverclockItem\";\nimport { RamRepairItem } from \"../Entity/Items/RamRepairItem\";\nimport { RestartItem } from \"../Entity/Items/RestartItem\";\nimport { ILevel } from \"../Level/ILevel\";\n\nconst baseItemSpawnRateInSeconds = 25;\nconst randomItemSpawnRateInSeconds = 15;\n\ntype ItemSpawn = (x: number, y: number) => ItemEntity;\n\nconst itemSpawns: ItemSpawn[] = [\n    (x, y) => new RamRepairItem(x, y),\n];\n\nconst rareItemSpawns: ItemSpawn[] = [\n    (x, y) => new CpuOverclockItem(x, y),\n    (x, y) => new RestartItem(x, y),\n];\n\nexport class ItemSpawnTask extends Task {\n    private spawnItemInSeconds = 20;\n\n    constructor(private readonly level: ILevel) {\n        super(60, true, 'item-spawns');\n    }\n\n    public execute(): void {\n        this.spawnItemInSeconds--;\n\n        if (this.spawnItemInSeconds > 0) {\n            return;\n        }\n\n        const xRange = (config.screenWidth / config.renderScale) - config.leftUiBarWidth - 14;\n        const yRange = config.BottomUiBarHeight - 14;\n\n        const x = Math.random() * xRange + 7 + config.leftUiBarWidth;\n        const y = Math.random() * yRange + 7;\n\n        const tableRoll = Math.random() * 2;\n        const itemTable = tableRoll <= 1 ? rareItemSpawns : itemSpawns;\n\n        const itemRoll = Math.floor(Math.random() * itemTable.length);\n        const item = itemTable[itemRoll](x, y);\n\n        this.level.add(item);\n        this.spawnItemInSeconds = this.getNextItemSpawnInSeconds();\n    }\n\n    private getNextItemSpawnInSeconds = () => baseItemSpawnRateInSeconds + (Math.random() * randomItemSpawnRateInSeconds);\n}","import { IActionExecutor } from \"../../libs/Core/Action/IActionExecutor\";\nimport { IScreen } from \"../../libs/Core/Screen/IScreen\";\nimport { RenderTextOptions } from \"../../libs/Core/Screen/RenderTextOptions\";\nimport { UI } from \"../../libs/Core/UI/UI\";\nimport { Maths } from \"../../libs/Core/Util/Maths\";\nimport { BuyPlaceableAction } from \"../Actions/Upgrades/BuyPlaceableUpgrade\";\nimport { config } from \"../Config\";\nimport { PlayerStats } from \"../Entity/Player/PlayerStats\";\nimport { Main } from \"../Main\";\nimport { Upgrade } from \"../Upgrades/Upgrade\";\nimport { Upgrades } from \"../Upgrades/Upgrades\";\n\nexport class BottomUi extends UI {\n    private selectedUpgrade: Upgrade;\n    private draggingUpgrade: Upgrade;\n\n    private readonly buyableUpgrades = Upgrades.getUpgrades().filter(u => !u.isPlaceable);\n    private readonly placeableUpgrades = Upgrades.getUpgrades().filter(u => u.isPlaceable);\n    \n    private readonly upgradeOffsetX = 18;\n    private readonly placeableUpgradeOffsetX = 3;\n\n    constructor(private readonly playerStats: PlayerStats, private readonly actionExecutor: IActionExecutor) {\n        super();\n    }\n\n    public override getPosition(): { x: number; y: number; width: number; height: number; } {\n        return { x: 0, y: config.BottomUiBarHeight, width: config.screenWidth, height: config.screenHeight - config.BottomUiBarHeight };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public override render(screen: IScreen): void {\n        const { width, height } = screen.getSize();\n        const textOptions: RenderTextOptions = { fontColor: '#ffffff', fontSize: 4, fontWeight: 600 };\n        screen.renderRectangle(0, config.BottomUiBarHeight, width, height - config.BottomUiBarHeight, { color: '#000000' });\n        screen.renderLine(0, config.BottomUiBarHeight, width, config.BottomUiBarHeight, 0.5, '#ffffff');\n\n        // Health bar\n        screen.renderRectangle(2.5, config.BottomUiBarHeight + 9.5, 71, 11, { color: '#ffffff' });\n        screen.renderRectangle(3, config.BottomUiBarHeight + 10, 70, 10, { color: 'red' });\n        \n        const healthWidth = (70 / this.playerStats.getMaxHealth()) * this.playerStats.getHealth();\n        screen.renderRectangle(3, config.BottomUiBarHeight + 10, healthWidth, 10, { color: 'green' });\n\n        screen.renderText(`Unused memory: ${this.playerStats.getHealth()} MB`, 3, config.BottomUiBarHeight + 16.3, {...textOptions, width: 70, textAlign: 'center' });\n\n        // Score\n        screen.renderText(`MB's cleaned: ${this.playerStats.getScore()}`, 2, config.BottomUiBarHeight + 5, textOptions);\n        screen.renderText(`Points: ${this.playerStats.getPoints()}`, 40, config.BottomUiBarHeight + 5, { ...textOptions, width: 33.5, textAlign: 'right' });\n        \n        // Labels\n        const buyablesWidth = this.upgradeOffsetX * this.buyableUpgrades.length;\n        screen.renderText('Upgrades', 79, config.BottomUiBarHeight + 5, {...textOptions, width: buyablesWidth, textAlign: 'center' });\n        screen.renderText('Workers', 79 + buyablesWidth + this.placeableUpgradeOffsetX, config.BottomUiBarHeight + 5, {...textOptions, width: this.upgradeOffsetX * this.placeableUpgrades.length, textAlign: 'center' });\n\n        // Dividers\n        screen.renderLine(76, config.BottomUiBarHeight, 76, height, 0.5, '#ffffff');\n        screen.renderLine(79 + buyablesWidth, config.BottomUiBarHeight, 79 + buyablesWidth, height, 0.5, '#ffffff');\n\n        // Upgrades\n        Upgrades.getUpgrades().forEach((upgrade, index) => {\n            const xOffset = (this.upgradeOffsetX * index) + (upgrade.isPlaceable ? this.placeableUpgradeOffsetX : 0);\n            screen.renderRectangle(79 + xOffset, config.BottomUiBarHeight + 8, 15, 15, { color: '#353535', filled: true });\n            screen.render(upgrade.icon, 81 + xOffset, config.BottomUiBarHeight + 10);\n        });\n\n        // Render hover\n        const hoverOptions: RenderTextOptions = { fontColor: '#ffffff', fontSize: 4, fontWeight: 600 };\n\n        if (this.selectedUpgrade) {\n            const level = this.playerStats.getUpgradeLevel(this.selectedUpgrade.upgradeType);\n            const cost = this.selectedUpgrade.cost(level);\n\n            screen.renderRectangle(this.mouseX + 5, this.mouseY - 9.5, 35, 18.5, { color: '#303030', alpha: 0.9 })\n            screen.renderText(this.selectedUpgrade.name, this.mouseX + 7, this.mouseY - 5, hoverOptions);\n            screen.renderText(this.selectedUpgrade.description, this.mouseX + 7, this.mouseY - 1, hoverOptions);\n            screen.renderText(`Level: ${level}`, this.mouseX + 7, this.mouseY + 3, hoverOptions);\n\n            const fontColor = this.playerStats.getPoints() >= cost ? '#47f219' : '#ff1f1f';\n            screen.renderText(`Cost: ${cost}`, this.mouseX + 7, this.mouseY + 7, {...hoverOptions, fontColor});\n        }\n        \n        if (this.draggingUpgrade) {\n            screen.render(this.draggingUpgrade.icon, this.mouseX, this.mouseY);\n        }\n    }\n\n    private getBaseUpgradePosition = () => ({ x: 79, y: config.BottomUiBarHeight + 8, width: 15, height: 15 });\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public override click(x: number, y: number): void {\n        if (Main.paused || this.playerStats.isDied()) {\n            this.clear();\n            return;\n        }\n\n        if (this.draggingUpgrade) {\n            const buyPlaceableAction = new BuyPlaceableAction(this.draggingUpgrade, this.mouseX, this.mouseY);\n            this.actionExecutor.execute(buyPlaceableAction);\n            this.draggingUpgrade = undefined;\n            return;\n        }\n\n        if (this.selectedUpgrade) {\n            if (!this.playerStats.canBuyUpgrade(this.selectedUpgrade)) {\n                // TODO: Not enough points - play sound to let player know\n                return;\n            }\n\n            if (this.selectedUpgrade.isPlaceable) {\n                this.draggingUpgrade = this.selectedUpgrade;\n                this.selectedUpgrade = undefined;\n                return;\n            }\n\n            this.playerStats.buyUpgrade(this.selectedUpgrade);\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public override hover(x: number, y: number): void {\n        if (Main.paused || this.playerStats.isDied()) {\n            this.clear();\n            return;\n        }\n\n        this.selectedUpgrade = undefined;\n\n        if (this.draggingUpgrade) return;\n        \n        const upgradePosition = this.getBaseUpgradePosition();\n\n        Upgrades.getUpgrades().forEach((upgrade, index) => {\n            const xOffset = (this.upgradeOffsetX * index) + (upgrade.isPlaceable ? this.placeableUpgradeOffsetX : 0);\n\n            if (Maths.intersects(upgradePosition.x + xOffset, upgradePosition.y - config.BottomUiBarHeight, upgradePosition.width, upgradePosition.height, x, y, 1, 1)) {\n                this.selectedUpgrade = upgrade;\n            }\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    public override drag(x: number, y: number): void {\n        if (Main.paused || this.playerStats.isDied()) {\n            this.clear();\n            return;\n        }\n\n        if (!this.selectedUpgrade) return;\n        \n        const upgradePosition = this.getBaseUpgradePosition();\n\n        Upgrades.getUpgrades().forEach((upgrade, index) => {\n            const xOffset = (this.upgradeOffsetX * index) + (upgrade.isPlaceable ? this.placeableUpgradeOffsetX : 0);\n\n            if (this.selectedUpgrade && upgrade.upgradeType === this.selectedUpgrade.upgradeType && !Maths.intersects(upgradePosition.x + xOffset, upgradePosition.y - config.BottomUiBarHeight, upgradePosition.width, upgradePosition.height, x, y, 1, 1)) {\n                if (this.selectedUpgrade.isPlaceable) {\n                    if (this.playerStats.canBuyUpgrade(this.selectedUpgrade)) {\n                        this.draggingUpgrade = this.selectedUpgrade;\n                    }\n                }\n                this.selectedUpgrade = undefined;\n            }\n        });\n    }\n\n    public override resetHover(): void {\n        \n    }\n\n    public override resetDrag(): void {\n        \n    }\n\n    public override tick(): void {\n    }\n\n    public clear(): void {\n        this.selectedUpgrade = undefined;\n        this.draggingUpgrade = undefined;\n    }\n}","export enum UITypes {\n    Bottom = 'bottom'\n}","import { Sprite } from \"../../libs/Core/Screen/Sprite\";\nimport { UpgradeType } from \"./UpgradeType\";\n\nexport class Upgrade {\n    public upgradeType: UpgradeType;\n    public name: string;\n    public description: string;\n    public icon: Sprite;\n    public isPlaceable: boolean;\n    public cost: (level: number) => number;\n\n    constructor(upgradeType: UpgradeType, name: string, description: string, icon: Sprite, isPlaceable: boolean, cost: (level: number) => number) {\n        this.upgradeType = upgradeType;\n        this.name = name;\n        this.description = description;\n        this.icon = icon;\n        this.isPlaceable = isPlaceable;\n        this.cost = cost;\n    }\n}","export enum UpgradeType {\n    CpuOverclock,\n    CpuThread,\n    Broom,\n    Ram,\n    NpuCore,\n}","import { config } from \"../Config\";\nimport { Sprites } from \"../Sprites\";\nimport { Upgrade } from \"./Upgrade\";\nimport { UpgradeType } from \"./UpgradeType\";\n\nexport class Upgrades {\n    // Buyables\n    public static cpuOverclock = new Upgrade(UpgradeType.CpuOverclock, 'CPU Overclock', `+${config.cpuThreadModifierPerLevelPercentage}% dmg/speed`, Sprites.overclockIcon, false, (level) => 25 + (level * 15));\n    public static ram = new Upgrade(UpgradeType.Ram, 'RAM', `+${config.memoryIncreasePerLevel}MB memory`, Sprites.ramIcon, false, (level) => 40 + (level * 10));\n    public static broom = new Upgrade(UpgradeType.Broom, 'Broom', `+${config.broomDamageIncreasePerLevelPercentage}% sweep dmg`, Sprites.broom, false, (level) => 10 + (level * 20));\n\n    // Placeables\n    public static cpu = new Upgrade(UpgradeType.CpuThread, 'CPU Thread', 'Placeable turret', Sprites.cpuIcon, true, (level) => 10 + (level * 20));\n    public static npu = new Upgrade(UpgradeType.NpuCore, 'NPU Core', 'Placeable turret', Sprites.npuIcon, true, (level) => 80 + (level * 30));\n\n    public static getUpgrades(): Array<Upgrade> {\n        return [ \n            this.cpuOverclock,\n            this.ram,\n            this.broom,\n            this.cpu,\n            this.npu,\n        ];\n    }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/Main.ts\");\n",""],"names":[],"sourceRoot":""}